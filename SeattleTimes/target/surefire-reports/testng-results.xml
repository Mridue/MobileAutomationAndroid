<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="25" passed="0" failed="0" skipped="25">
  <reporter-output>
    <line>
      <![CDATA[Extent Report directory: C:\Users\arifq\Desktop\Java N Selenium\AndroidAutomationProject\SeattleTimes\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite started-at="2019-01-30T00:23:11Z" name="Seattle Times App Automation Test" finished-at="2019-01-30T00:23:13Z" duration-ms="1419">
    <groups>
    </groups>
    <test started-at="2019-01-30T00:23:11Z" name="GoToHomePage" finished-at="2019-01-30T00:23:13Z" duration-ms="1419">
      <class name="testcases.TestHomePage">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:11Z" name="extentSetup" finished-at="2019-01-29T19:23:11Z" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3f093abe]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report directory: C:\Users\arifq\Desktop\Java N Selenium\AndroidAutomationProject\SeattleTimes\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:11Z" name="setUp" finished-at="2019-01-29T19:23:11Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Phone]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Emulator]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Nexus]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[SeattleTimes]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[The Seattle Times.apk]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.43.1', revision: '5163bceef1bc36d43f3dc0b83c88998168a363a0', time: '2014-09-10 09:43:55'
System info: host: 'DESKTOP-SUVDR7C', ip: '192.168.179.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.43.1', revision: '5163bceef1bc36d43f3dc0b83c88998168a363a0', time: '2014-09-10 09:43:55'
System info: host: 'DESKTOP-SUVDR7C', ip: '192.168.179.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:593)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:180)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:109)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:39)
	at base.MobileAPI.setUpAndroidEnv(MobileAPI.java:169)
	at base.MobileAPI.setUp(MobileAPI.java:138)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 0.0.0.0:4723 [/0.0.0.0] failed: Connection refused: connect
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:140)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:314)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:186)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.openqa.selenium.remote.HttpCommandExecutor.fallBackExecute(HttpCommandExecutor.java:215)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)
	... 38 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:240)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
	at java.base/java.net.Socket.connect(Socket.java:591)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:72)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:117)
	... 50 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="test1BurgerButton()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="test1BurgerButton" finished-at="2019-01-29T19:23:13Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1BurgerButton -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testBurgerMenuSwipeUpnDown()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testBurgerMenuSwipeUpnDown" finished-at="2019-01-29T19:23:13Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBurgerMenuSwipeUpnDown -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnEducation()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testClickOnEducation" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickOnEducation -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnTopStories()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testClickOnTopStories" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickOnTopStories -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testClickOntrending()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testClickOntrending" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickOntrending -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEntertainment()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testGetEntertainment" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEntertainment -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testGetNationWorld()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testGetNationWorld" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNationWorld -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testGetLife()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testGetLife" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLife -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testGetOpinion()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testGetOpinion" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOpinion -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testGetTitle()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testGetTitle" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTitle -->
        <test-method signature="testGetSports()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testGetSports" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSports -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testHomePageSwipeUpnDown()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testHomePageSwipeUpnDown" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomePageSwipeUpnDown -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testScrollMenuList()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testScrollMenuList" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollMenuList -->
        <test-method signature="testTapOnBurgerMenu()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testTapOnBurgerMenu" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTapOnBurgerMenu -->
        <test-method signature="testTapOnLatest()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testTapOnLatest" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTapOnLatest -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTapOnTrending()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testTapOnTrending" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTapOnTrending -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testTapOnTopStories()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testTapOnTopStories" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTapOnTopStories -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testscrollMenuList()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollMenuList" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollMenuList -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testscrollPNWMagazine()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollPNWMagazine" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollPNWMagazine -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testscrollToBusiness()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollToBusiness" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollToBusiness -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testscrollToGetNews()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollToGetNews" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollToGetNews -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testscrollToGetBusinessNews()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollToGetBusinessNews" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollToGetBusinessNews -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testscrollToLocal()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollToLocal" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollToLocal -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method signature="testscrollToMyReadingList()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollToMyReadingList" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollToMyReadingList -->
        <test-method signature="testscrollToSports()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="testscrollToSports" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testscrollToSports -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="afterEachTestMethod" finished-at="2019-01-29T19:23:13Z" duration-ms="5" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="startExtent" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="initialize" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="setUp" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:testcases.TestHomePage@71e9ddb4]" started-at="2019-01-29T19:23:13Z" name="generateReport" finished-at="2019-01-29T19:23:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testcases.TestHomePage -->
    </test> <!-- GoToHomePage -->
  </suite> <!-- Seattle Times App Automation Test -->
</testng-results>
